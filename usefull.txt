-------------  0 - TL;DR ---------------

# PROD URL:
http://51.254.221.25:8080


# Use db server (vps494554):
ssh lve@51.254.221.25
(not ssh lve@51.255.46.214)

# Connect on mongo (from app or db server):
# as admin:
mongo 51.254.221.25:27017/admin -u adminFrozen -p frozenPwd --authenticationDatabase admin --ssl --sslPEMKeyFile /etc/ssl/mongodb.pem --sslCAFile /etc/ssl/mongodb-cert.crt --sslAllowInvalidHostnames
# as regular user (dev & prod):
mongo 51.254.221.25:27017/frozen-dev -u frozen -p gem --authenticationDatabase frozen-dev --ssl --sslPEMKeyFile /etc/ssl/mongodb.pem --sslCAFile /etc/ssl/mongodb-cert.crt --sslAllowInvalidHostnames
mongo 51.254.221.25:27017/frozen -u frozen -p gem --authenticationDatabase frozen --ssl --sslPEMKeyFile /etc/ssl/mongodb.pem --sslCAFile /etc/ssl/mongodb-cert.crt --sslAllowInvalidHostnames




---------------------------------------------------------------
                manual actions with curl
---------------------------------------------------------------

Create user:
curl -X POST http://0.0.0.0:9000/users -i -d "email=test@example.com&password=123456&access_token=S9EqDPByR2z5mnCMaRFk7b552RWaFcnn"
curl -X POST http://51.254.221.25:8080/users -i -d "email=test@example.com&password=123456&access_token=S9EqDPByR2z5mnCMaRFk7b552RWaFcnn"
curl -X POST http://0.0.0.0:9000/users -i -d "role=admin&email=admin@example.com&password=123456&access_token=S9EqDPByR2z5mnCMaRFk7b552RWaFcnn"


Login user:
curl -X POST http://0.0.0.0:9000/auth -i -u test@example.com:123456 -d "access_token=S9EqDPByR2z5mnCMaRFk7b552RWaFcnn"

See articles (not working):
curl -X POST http://0.0.0.0:9000/articles -i -d "title=Awesome Article&content=Yeah Baby&access_token=S9EqDPByR2z5mnCMaRFk7b552RWaFcnn"

View categ:
curl -X GET http://0.0.0.0:9000/categories -i -d "access_token=TOKEN"
curl -X GET http://0.0.0.0:9000/categories -i -d "access_token=TOKEN"



---------------------------------------------------------------
                Mongo
---------------------------------------------------------------

mongo
use admin
db.createUser({ user:"adminFrozen", pwd:"frozenPwd", roles:[{role:"root", db:"admin"}]})
exit

# Must create these users (admin & regular) for prod & dev dbs:
use admin
db.getUsers()
use frozen-dev
db.createUser({ user:"frozen", pwd:"gem", roles:["readWrite"] })
db.createUser({ user:"adminFrozen", pwd:"pwdRoot", roles: ["dbAdmin"]})
use frozen
db.createUser({ user:"frozen", pwd:"gem", roles:["readWrite"] })
db.createUser({ user:"adminFrozen", pwd:"pwdRoot", roles: ["dbAdmin"]})